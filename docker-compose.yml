version: "3.7"

services:
  # PHP service
  app:
    build:
      args:
        user: www
        uid: 1000
      context: ./
      dockerfile: ./docker/Dockerfile
    image: laravel-image
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  # Mysql service
  db:
    image: mysql:5.7
    container_name: laravel-db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - dbdata:/var/lib/mysql
      #- ./docker/mysql/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    networks:
      - app-network

  # Phpmyadmin service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel-phpmyadmin
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    depends_on:
      - db
    ports:
    - "8081:80"
    volumes:
      - /sessions
    networks:
      - app-network
    links:
      - db

  # Nginx service
  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

# Networks
networks:
  app-network:
    driver: bridge

# Volumes - save you database data local in server
volumes:
  dbdata:
    driver: local
